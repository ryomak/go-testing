// Code generated by MockGen. DO NOT EDIT.
// Source: calculator.go

// Package mock_main is a generated GoMock package.
package main

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockICalculator is a mock of ICalculator interface
type MockICalculator struct {
	ctrl     *gomock.Controller
	recorder *MockICalculatorMockRecorder
}

// MockICalculatorMockRecorder is the mock recorder for MockICalculator
type MockICalculatorMockRecorder struct {
	mock *MockICalculator
}

// NewMockICalculator creates a new mock instance
func NewMockICalculator(ctrl *gomock.Controller) *MockICalculator {
	mock := &MockICalculator{ctrl: ctrl}
	mock.recorder = &MockICalculatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockICalculator) EXPECT() *MockICalculatorMockRecorder {
	return m.recorder
}

// calcBMI mocks base method
func (m *MockICalculator) calcBMI(height, weight float64) float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "calcBMI", height, weight)
	ret0, _ := ret[0].(float64)
	return ret0
}

// calcBMI indicates an expected call of calcBMI
func (mr *MockICalculatorMockRecorder) calcBMI(height, weight interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "calcBMI", reflect.TypeOf((*MockICalculator)(nil).calcBMI), height, weight)
}
